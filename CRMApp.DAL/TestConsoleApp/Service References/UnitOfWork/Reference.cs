//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestConsoleApp.UnitOfWork {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UnitOfWork.IUnityOfWork")]
    public interface IUnityOfWork {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrdersRepository/GetAllOrders", ReplyAction="http://tempuri.org/IOrdersRepository/GetAllOrdersResponse")]
        UserDbDll.Models.Order[] GetAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrdersRepository/GetAllOrders", ReplyAction="http://tempuri.org/IOrdersRepository/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<UserDbDll.Models.Order[]> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrdersRepository/GetOrder", ReplyAction="http://tempuri.org/IOrdersRepository/GetOrderResponse")]
        UserDbDll.Models.Order GetOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrdersRepository/GetOrder", ReplyAction="http://tempuri.org/IOrdersRepository/GetOrderResponse")]
        System.Threading.Tasks.Task<UserDbDll.Models.Order> GetOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrdersRepository/CreateOrder", ReplyAction="http://tempuri.org/IOrdersRepository/CreateOrderResponse")]
        void CreateOrder(UserDbDll.Models.Order item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrdersRepository/CreateOrder", ReplyAction="http://tempuri.org/IOrdersRepository/CreateOrderResponse")]
        System.Threading.Tasks.Task CreateOrderAsync(UserDbDll.Models.Order item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrdersRepository/UpdateOrder", ReplyAction="http://tempuri.org/IOrdersRepository/UpdateOrderResponse")]
        void UpdateOrder(UserDbDll.Models.Order item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrdersRepository/UpdateOrder", ReplyAction="http://tempuri.org/IOrdersRepository/UpdateOrderResponse")]
        System.Threading.Tasks.Task UpdateOrderAsync(UserDbDll.Models.Order item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrdersRepository/DeleteOrder", ReplyAction="http://tempuri.org/IOrdersRepository/DeleteOrderResponse")]
        void DeleteOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrdersRepository/DeleteOrder", ReplyAction="http://tempuri.org/IOrdersRepository/DeleteOrderResponse")]
        System.Threading.Tasks.Task DeleteOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientsRepository/GetAllClients", ReplyAction="http://tempuri.org/IClientsRepository/GetAllClientsResponse")]
        UserDbDll.Models.Client[] GetAllClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientsRepository/GetAllClients", ReplyAction="http://tempuri.org/IClientsRepository/GetAllClientsResponse")]
        System.Threading.Tasks.Task<UserDbDll.Models.Client[]> GetAllClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientsRepository/GetClient", ReplyAction="http://tempuri.org/IClientsRepository/GetClientResponse")]
        UserDbDll.Models.Client GetClient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientsRepository/GetClient", ReplyAction="http://tempuri.org/IClientsRepository/GetClientResponse")]
        System.Threading.Tasks.Task<UserDbDll.Models.Client> GetClientAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientsRepository/CreateClient", ReplyAction="http://tempuri.org/IClientsRepository/CreateClientResponse")]
        void CreateClient(UserDbDll.Models.Client item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientsRepository/CreateClient", ReplyAction="http://tempuri.org/IClientsRepository/CreateClientResponse")]
        System.Threading.Tasks.Task CreateClientAsync(UserDbDll.Models.Client item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientsRepository/UpdateClient", ReplyAction="http://tempuri.org/IClientsRepository/UpdateClientResponse")]
        void UpdateClient(UserDbDll.Models.Client item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientsRepository/UpdateClient", ReplyAction="http://tempuri.org/IClientsRepository/UpdateClientResponse")]
        System.Threading.Tasks.Task UpdateClientAsync(UserDbDll.Models.Client item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientsRepository/DeleteClient", ReplyAction="http://tempuri.org/IClientsRepository/DeleteClientResponse")]
        void DeleteClient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientsRepository/DeleteClient", ReplyAction="http://tempuri.org/IClientsRepository/DeleteClientResponse")]
        System.Threading.Tasks.Task DeleteClientAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginAndPasswordsRepository/GetAllLoginAndPassword", ReplyAction="http://tempuri.org/ILoginAndPasswordsRepository/GetAllLoginAndPasswordResponse")]
        UserDbDll.Models.LoginAndPassword[] GetAllLoginAndPassword();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginAndPasswordsRepository/GetAllLoginAndPassword", ReplyAction="http://tempuri.org/ILoginAndPasswordsRepository/GetAllLoginAndPasswordResponse")]
        System.Threading.Tasks.Task<UserDbDll.Models.LoginAndPassword[]> GetAllLoginAndPasswordAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginAndPasswordsRepository/GetLoginAndPassword", ReplyAction="http://tempuri.org/ILoginAndPasswordsRepository/GetLoginAndPasswordResponse")]
        UserDbDll.Models.LoginAndPassword GetLoginAndPassword(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginAndPasswordsRepository/GetLoginAndPassword", ReplyAction="http://tempuri.org/ILoginAndPasswordsRepository/GetLoginAndPasswordResponse")]
        System.Threading.Tasks.Task<UserDbDll.Models.LoginAndPassword> GetLoginAndPasswordAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginAndPasswordsRepository/CreateLoginAndPassword", ReplyAction="http://tempuri.org/ILoginAndPasswordsRepository/CreateLoginAndPasswordResponse")]
        void CreateLoginAndPassword(UserDbDll.Models.LoginAndPassword item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginAndPasswordsRepository/CreateLoginAndPassword", ReplyAction="http://tempuri.org/ILoginAndPasswordsRepository/CreateLoginAndPasswordResponse")]
        System.Threading.Tasks.Task CreateLoginAndPasswordAsync(UserDbDll.Models.LoginAndPassword item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginAndPasswordsRepository/UpdateLoginAndPassword", ReplyAction="http://tempuri.org/ILoginAndPasswordsRepository/UpdateLoginAndPasswordResponse")]
        void UpdateLoginAndPassword(UserDbDll.Models.LoginAndPassword item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginAndPasswordsRepository/UpdateLoginAndPassword", ReplyAction="http://tempuri.org/ILoginAndPasswordsRepository/UpdateLoginAndPasswordResponse")]
        System.Threading.Tasks.Task UpdateLoginAndPasswordAsync(UserDbDll.Models.LoginAndPassword item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginAndPasswordsRepository/DeleteLoginAndPassword", ReplyAction="http://tempuri.org/ILoginAndPasswordsRepository/DeleteLoginAndPasswordResponse")]
        void DeleteLoginAndPassword(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginAndPasswordsRepository/DeleteLoginAndPassword", ReplyAction="http://tempuri.org/ILoginAndPasswordsRepository/DeleteLoginAndPasswordResponse")]
        System.Threading.Tasks.Task DeleteLoginAndPasswordAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersRepository/GetAllUsers", ReplyAction="http://tempuri.org/IUsersRepository/GetAllUsersResponse")]
        UserDbDll.Models.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersRepository/GetAllUsers", ReplyAction="http://tempuri.org/IUsersRepository/GetAllUsersResponse")]
        System.Threading.Tasks.Task<UserDbDll.Models.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersRepository/GetUser", ReplyAction="http://tempuri.org/IUsersRepository/GetUserResponse")]
        UserDbDll.Models.User GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersRepository/GetUser", ReplyAction="http://tempuri.org/IUsersRepository/GetUserResponse")]
        System.Threading.Tasks.Task<UserDbDll.Models.User> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersRepository/CreateUser", ReplyAction="http://tempuri.org/IUsersRepository/CreateUserResponse")]
        void CreateUser(UserDbDll.Models.User item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersRepository/CreateUser", ReplyAction="http://tempuri.org/IUsersRepository/CreateUserResponse")]
        System.Threading.Tasks.Task CreateUserAsync(UserDbDll.Models.User item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersRepository/UpdateUser", ReplyAction="http://tempuri.org/IUsersRepository/UpdateUserResponse")]
        void UpdateUser(UserDbDll.Models.User item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersRepository/UpdateUser", ReplyAction="http://tempuri.org/IUsersRepository/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(UserDbDll.Models.User item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersRepository/DeleteUser", ReplyAction="http://tempuri.org/IUsersRepository/DeleteUserResponse")]
        void DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersRepository/DeleteUser", ReplyAction="http://tempuri.org/IUsersRepository/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/Save", ReplyAction="http://tempuri.org/IUnityOfWork/SaveResponse")]
        void Save();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/Save", ReplyAction="http://tempuri.org/IUnityOfWork/SaveResponse")]
        System.Threading.Tasks.Task SaveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllClientDtos", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllClientDtosResponse")]
        UserDbDTo.DTO.ClientDto[] GetAllClientDtos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllClientDtos", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllClientDtosResponse")]
        System.Threading.Tasks.Task<UserDbDTo.DTO.ClientDto[]> GetAllClientDtosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllOrderDtos", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllOrderDtosResponse")]
        UserDbDTo.DTO.OrderDto[] GetAllOrderDtos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllOrderDtos", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllOrderDtosResponse")]
        System.Threading.Tasks.Task<UserDbDTo.DTO.OrderDto[]> GetAllOrderDtosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllUserDtos", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllUserDtosResponse")]
        UserDbDTo.DTO.UserDto[] GetAllUserDtos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllUserDtos", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllUserDtosResponse")]
        System.Threading.Tasks.Task<UserDbDTo.DTO.UserDto[]> GetAllUserDtosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllOrdersCurrentUser", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllOrdersCurrentUserResponse")]
        UserDbDTo.DTO.OrderDto[] GetAllOrdersCurrentUser(int currentUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllOrdersCurrentUser", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllOrdersCurrentUserResponse")]
        System.Threading.Tasks.Task<UserDbDTo.DTO.OrderDto[]> GetAllOrdersCurrentUserAsync(int currentUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllOrdersCurrentClient", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllOrdersCurrentClientResponse")]
        UserDbDTo.DTO.OrderDto[] GetAllOrdersCurrentClient(int currentClientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllOrdersCurrentClient", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllOrdersCurrentClientResponse")]
        System.Threading.Tasks.Task<UserDbDTo.DTO.OrderDto[]> GetAllOrdersCurrentClientAsync(int currentClientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllOrderDtosTheCompany", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllOrderDtosTheCompanyResponse")]
        UserDbDTo.DTO.OrderDto[] GetAllOrderDtosTheCompany(string companyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllOrderDtosTheCompany", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllOrderDtosTheCompanyResponse")]
        System.Threading.Tasks.Task<UserDbDTo.DTO.OrderDto[]> GetAllOrderDtosTheCompanyAsync(string companyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/UserDtoAuthorization", ReplyAction="http://tempuri.org/IUnityOfWork/UserDtoAuthorizationResponse")]
        UserDbDTo.DTO.UserDto UserDtoAuthorization(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/UserDtoAuthorization", ReplyAction="http://tempuri.org/IUnityOfWork/UserDtoAuthorizationResponse")]
        System.Threading.Tasks.Task<UserDbDTo.DTO.UserDto> UserDtoAuthorizationAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllClientsCurrentUser", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllClientsCurrentUserResponse")]
        UserDbDTo.DTO.ClientDto[] GetAllClientsCurrentUser(int currentUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/GetAllClientsCurrentUser", ReplyAction="http://tempuri.org/IUnityOfWork/GetAllClientsCurrentUserResponse")]
        System.Threading.Tasks.Task<UserDbDTo.DTO.ClientDto[]> GetAllClientsCurrentUserAsync(int currentUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/AppUsers", ReplyAction="http://tempuri.org/IUnityOfWork/AppUsersResponse")]
        void AppUsers(UserDbDTo.DTO.UserDto updateUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/AppUsers", ReplyAction="http://tempuri.org/IUnityOfWork/AppUsersResponse")]
        System.Threading.Tasks.Task AppUsersAsync(UserDbDTo.DTO.UserDto updateUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/AddLoginAndPasswords", ReplyAction="http://tempuri.org/IUnityOfWork/AddLoginAndPasswordsResponse")]
        void AddLoginAndPasswords(UserDbDTo.DTO.LoginAndPasswordDto updateLoginAndPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/AddLoginAndPasswords", ReplyAction="http://tempuri.org/IUnityOfWork/AddLoginAndPasswordsResponse")]
        System.Threading.Tasks.Task AddLoginAndPasswordsAsync(UserDbDTo.DTO.LoginAndPasswordDto updateLoginAndPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/AddClients", ReplyAction="http://tempuri.org/IUnityOfWork/AddClientsResponse")]
        void AddClients(UserDbDTo.DTO.ClientDto updateClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/AddClients", ReplyAction="http://tempuri.org/IUnityOfWork/AddClientsResponse")]
        System.Threading.Tasks.Task AddClientsAsync(UserDbDTo.DTO.ClientDto updateClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/AddOrders", ReplyAction="http://tempuri.org/IUnityOfWork/AddOrdersResponse")]
        void AddOrders(UserDbDTo.DTO.OrderDto updateOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnityOfWork/AddOrders", ReplyAction="http://tempuri.org/IUnityOfWork/AddOrdersResponse")]
        System.Threading.Tasks.Task AddOrdersAsync(UserDbDTo.DTO.OrderDto updateOrder);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUnityOfWorkChannel : TestConsoleApp.UnitOfWork.IUnityOfWork, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnityOfWorkClient : System.ServiceModel.ClientBase<TestConsoleApp.UnitOfWork.IUnityOfWork>, TestConsoleApp.UnitOfWork.IUnityOfWork {
        
        public UnityOfWorkClient() {
        }
        
        public UnityOfWorkClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UnityOfWorkClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnityOfWorkClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnityOfWorkClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public UserDbDll.Models.Order[] GetAllOrders() {
            return base.Channel.GetAllOrders();
        }
        
        public System.Threading.Tasks.Task<UserDbDll.Models.Order[]> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public UserDbDll.Models.Order GetOrder(int id) {
            return base.Channel.GetOrder(id);
        }
        
        public System.Threading.Tasks.Task<UserDbDll.Models.Order> GetOrderAsync(int id) {
            return base.Channel.GetOrderAsync(id);
        }
        
        public void CreateOrder(UserDbDll.Models.Order item) {
            base.Channel.CreateOrder(item);
        }
        
        public System.Threading.Tasks.Task CreateOrderAsync(UserDbDll.Models.Order item) {
            return base.Channel.CreateOrderAsync(item);
        }
        
        public void UpdateOrder(UserDbDll.Models.Order item) {
            base.Channel.UpdateOrder(item);
        }
        
        public System.Threading.Tasks.Task UpdateOrderAsync(UserDbDll.Models.Order item) {
            return base.Channel.UpdateOrderAsync(item);
        }
        
        public void DeleteOrder(int id) {
            base.Channel.DeleteOrder(id);
        }
        
        public System.Threading.Tasks.Task DeleteOrderAsync(int id) {
            return base.Channel.DeleteOrderAsync(id);
        }
        
        public UserDbDll.Models.Client[] GetAllClients() {
            return base.Channel.GetAllClients();
        }
        
        public System.Threading.Tasks.Task<UserDbDll.Models.Client[]> GetAllClientsAsync() {
            return base.Channel.GetAllClientsAsync();
        }
        
        public UserDbDll.Models.Client GetClient(int id) {
            return base.Channel.GetClient(id);
        }
        
        public System.Threading.Tasks.Task<UserDbDll.Models.Client> GetClientAsync(int id) {
            return base.Channel.GetClientAsync(id);
        }
        
        public void CreateClient(UserDbDll.Models.Client item) {
            base.Channel.CreateClient(item);
        }
        
        public System.Threading.Tasks.Task CreateClientAsync(UserDbDll.Models.Client item) {
            return base.Channel.CreateClientAsync(item);
        }
        
        public void UpdateClient(UserDbDll.Models.Client item) {
            base.Channel.UpdateClient(item);
        }
        
        public System.Threading.Tasks.Task UpdateClientAsync(UserDbDll.Models.Client item) {
            return base.Channel.UpdateClientAsync(item);
        }
        
        public void DeleteClient(int id) {
            base.Channel.DeleteClient(id);
        }
        
        public System.Threading.Tasks.Task DeleteClientAsync(int id) {
            return base.Channel.DeleteClientAsync(id);
        }
        
        public UserDbDll.Models.LoginAndPassword[] GetAllLoginAndPassword() {
            return base.Channel.GetAllLoginAndPassword();
        }
        
        public System.Threading.Tasks.Task<UserDbDll.Models.LoginAndPassword[]> GetAllLoginAndPasswordAsync() {
            return base.Channel.GetAllLoginAndPasswordAsync();
        }
        
        public UserDbDll.Models.LoginAndPassword GetLoginAndPassword(int id) {
            return base.Channel.GetLoginAndPassword(id);
        }
        
        public System.Threading.Tasks.Task<UserDbDll.Models.LoginAndPassword> GetLoginAndPasswordAsync(int id) {
            return base.Channel.GetLoginAndPasswordAsync(id);
        }
        
        public void CreateLoginAndPassword(UserDbDll.Models.LoginAndPassword item) {
            base.Channel.CreateLoginAndPassword(item);
        }
        
        public System.Threading.Tasks.Task CreateLoginAndPasswordAsync(UserDbDll.Models.LoginAndPassword item) {
            return base.Channel.CreateLoginAndPasswordAsync(item);
        }
        
        public void UpdateLoginAndPassword(UserDbDll.Models.LoginAndPassword item) {
            base.Channel.UpdateLoginAndPassword(item);
        }
        
        public System.Threading.Tasks.Task UpdateLoginAndPasswordAsync(UserDbDll.Models.LoginAndPassword item) {
            return base.Channel.UpdateLoginAndPasswordAsync(item);
        }
        
        public void DeleteLoginAndPassword(int id) {
            base.Channel.DeleteLoginAndPassword(id);
        }
        
        public System.Threading.Tasks.Task DeleteLoginAndPasswordAsync(int id) {
            return base.Channel.DeleteLoginAndPasswordAsync(id);
        }
        
        public UserDbDll.Models.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<UserDbDll.Models.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public UserDbDll.Models.User GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<UserDbDll.Models.User> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public void CreateUser(UserDbDll.Models.User item) {
            base.Channel.CreateUser(item);
        }
        
        public System.Threading.Tasks.Task CreateUserAsync(UserDbDll.Models.User item) {
            return base.Channel.CreateUserAsync(item);
        }
        
        public void UpdateUser(UserDbDll.Models.User item) {
            base.Channel.UpdateUser(item);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(UserDbDll.Models.User item) {
            return base.Channel.UpdateUserAsync(item);
        }
        
        public void DeleteUser(int id) {
            base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public void Save() {
            base.Channel.Save();
        }
        
        public System.Threading.Tasks.Task SaveAsync() {
            return base.Channel.SaveAsync();
        }
        
        public UserDbDTo.DTO.ClientDto[] GetAllClientDtos() {
            return base.Channel.GetAllClientDtos();
        }
        
        public System.Threading.Tasks.Task<UserDbDTo.DTO.ClientDto[]> GetAllClientDtosAsync() {
            return base.Channel.GetAllClientDtosAsync();
        }
        
        public UserDbDTo.DTO.OrderDto[] GetAllOrderDtos() {
            return base.Channel.GetAllOrderDtos();
        }
        
        public System.Threading.Tasks.Task<UserDbDTo.DTO.OrderDto[]> GetAllOrderDtosAsync() {
            return base.Channel.GetAllOrderDtosAsync();
        }
        
        public UserDbDTo.DTO.UserDto[] GetAllUserDtos() {
            return base.Channel.GetAllUserDtos();
        }
        
        public System.Threading.Tasks.Task<UserDbDTo.DTO.UserDto[]> GetAllUserDtosAsync() {
            return base.Channel.GetAllUserDtosAsync();
        }
        
        public UserDbDTo.DTO.OrderDto[] GetAllOrdersCurrentUser(int currentUserId) {
            return base.Channel.GetAllOrdersCurrentUser(currentUserId);
        }
        
        public System.Threading.Tasks.Task<UserDbDTo.DTO.OrderDto[]> GetAllOrdersCurrentUserAsync(int currentUserId) {
            return base.Channel.GetAllOrdersCurrentUserAsync(currentUserId);
        }
        
        public UserDbDTo.DTO.OrderDto[] GetAllOrdersCurrentClient(int currentClientId) {
            return base.Channel.GetAllOrdersCurrentClient(currentClientId);
        }
        
        public System.Threading.Tasks.Task<UserDbDTo.DTO.OrderDto[]> GetAllOrdersCurrentClientAsync(int currentClientId) {
            return base.Channel.GetAllOrdersCurrentClientAsync(currentClientId);
        }
        
        public UserDbDTo.DTO.OrderDto[] GetAllOrderDtosTheCompany(string companyName) {
            return base.Channel.GetAllOrderDtosTheCompany(companyName);
        }
        
        public System.Threading.Tasks.Task<UserDbDTo.DTO.OrderDto[]> GetAllOrderDtosTheCompanyAsync(string companyName) {
            return base.Channel.GetAllOrderDtosTheCompanyAsync(companyName);
        }
        
        public UserDbDTo.DTO.UserDto UserDtoAuthorization(string login, string password) {
            return base.Channel.UserDtoAuthorization(login, password);
        }
        
        public System.Threading.Tasks.Task<UserDbDTo.DTO.UserDto> UserDtoAuthorizationAsync(string login, string password) {
            return base.Channel.UserDtoAuthorizationAsync(login, password);
        }
        
        public UserDbDTo.DTO.ClientDto[] GetAllClientsCurrentUser(int currentUserId) {
            return base.Channel.GetAllClientsCurrentUser(currentUserId);
        }
        
        public System.Threading.Tasks.Task<UserDbDTo.DTO.ClientDto[]> GetAllClientsCurrentUserAsync(int currentUserId) {
            return base.Channel.GetAllClientsCurrentUserAsync(currentUserId);
        }
        
        public void AppUsers(UserDbDTo.DTO.UserDto updateUser) {
            base.Channel.AppUsers(updateUser);
        }
        
        public System.Threading.Tasks.Task AppUsersAsync(UserDbDTo.DTO.UserDto updateUser) {
            return base.Channel.AppUsersAsync(updateUser);
        }
        
        public void AddLoginAndPasswords(UserDbDTo.DTO.LoginAndPasswordDto updateLoginAndPassword) {
            base.Channel.AddLoginAndPasswords(updateLoginAndPassword);
        }
        
        public System.Threading.Tasks.Task AddLoginAndPasswordsAsync(UserDbDTo.DTO.LoginAndPasswordDto updateLoginAndPassword) {
            return base.Channel.AddLoginAndPasswordsAsync(updateLoginAndPassword);
        }
        
        public void AddClients(UserDbDTo.DTO.ClientDto updateClient) {
            base.Channel.AddClients(updateClient);
        }
        
        public System.Threading.Tasks.Task AddClientsAsync(UserDbDTo.DTO.ClientDto updateClient) {
            return base.Channel.AddClientsAsync(updateClient);
        }
        
        public void AddOrders(UserDbDTo.DTO.OrderDto updateOrder) {
            base.Channel.AddOrders(updateOrder);
        }
        
        public System.Threading.Tasks.Task AddOrdersAsync(UserDbDTo.DTO.OrderDto updateOrder) {
            return base.Channel.AddOrdersAsync(updateOrder);
        }
    }
}
